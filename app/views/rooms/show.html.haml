.room-show{data: {controller: "modal"}}
  = render 'room_layout'
  .room-banner{data: {controller: "toggle" }}

    -# .room-map-toggle{"data-action" => "click->toggle#roomsmapToggle",  "data-controller" => "map",
            "data-map-mapbox-token" => "#{Rails.application.credentials.dig(:MI_LOCATIONS_OPENMAP_TOKEN)}",
            "data-map-mapbox-room" => @room_json}

    .room-map-toggle{data: {controller: "map", action: "click->toggle#roomsmapToggle", "map-mapbox-token" => "#{Rails.application.credentials.dig(:MI_LOCATIONS_OPENMAP_TOKEN)}", "map-mapbox-room" => @room_json }}
      .map{data: {target: "toggle.roomsmap" }}
        %i.fas.fa-map
        Map
      .close-map.hidden{data: {target: "toggle.roomsmap" }}
        %i.fas.fa-map
        Close

    .room-map.hidden{data: {target: "toggle.roomsmap" }}
      #mapid

    .room-show-image{data: {target: "toggle.roomsmap" }}
      - if @room.room_panorama.attached?
        #panorama{ "data-controller" => "pannellum", "data-pannellum-panoimage" => "#{url_for(@room.room_panorama)}",  "data-pannellum-panopreview" => "#{url_for(@room.room_panorama.variant(resize: "25%").processed)}" }

      - elsif @room.room_image.attached?
        = image_tag(url_for(@room.room_image), alt: "#{@room.room_number.titleize} #{@room.building.name.titleize} picture")
      -else
        = image_tag(asset_pack_path('media/mi_locations/images/vistas/Burton.jpg'), alt: "#{@room.room_number.titleize} #{@room.building.name.titleize} image not available")

  = render partial: 'alerts/alerts', locals: {alertable: @room}

  .room-info-pane
    .room-name-address
      .room-title
        = @room.title
      .room-department
        = @room.department_name
    .info
      .left
        %li.room-capacity
          = link_to  "", {:role => "button", :class => " button tooltip tooltip-top ", data: { tooltip: "Number of stations with a corresponding writing or lab surface assigned to students for instruction.  In computer labs, this includes only seats with assigned computers. Excludes instructor station and other seating types without writing surfaces." }} do
            %i.fas.fa-users
            = "Capacity #{@room.instructional_seating_count} "

        - if @room.team_learning_classroom?
          %li.room-team-learning
            = link_to  "", {:role => "button", :class => " button tooltip tooltip-top ", data: { "tooltip" => "Classroom is equiped with team-learning resources." }} do

              %i.fas.fa-handshake
              Team Learning Classroom
        %li.room-layout
          = link_to  "", {:role => "button", :class => " button tooltip tooltip-top ", data: {tooltip: "The room arrangement for this room and room support and scheduling contacts.", action: "click->modal#open" }} do
            %i.fas.fa-chair
            %span Room Layout

      .right
        %li.room-directions
          %i.fas.fa-map-marked-alt
          Directions

        %li.room-calendar
          = link_to  "https://csprod.dsc.umich.edu/services/facilitycalendar?facilityid=#{@room.facility_code_heprod }", {:target => "_blank", :role => "button", :class => " button tooltip tooltip-top ", data: {"tooltip" => "Go to room schedule." }} do
            %i.fas.fa-calendar
            Calendar

  %section.room-features.features-group
    %h2
      Room Features
    .room-chars
      - @room.room_characteristics.select{ |c| c.feature?}.each do |characteristic|
        = render partial: 'room_characteristic', locals:  {characteristic: characteristic}

  %section.secondary-features

    .team-learning.features-group
      %h2 Team Learning
      .room-chars
        -@room.room_characteristics.select{ |c| c.teamlearning_feature?}.each do |characteristic|
          = render partial: 'room_characteristic', locals:  {characteristic: characteristic}

    .writing-surfaces.features-group
      %h2 Writing Surfaces
      .room-chars
        -@room.room_characteristics.select{ |c| c.teamlearning_feature? || c.whiteboard_feature? || c.chalkboard_feature?}.each do |characteristic|
          = render partial: 'room_characteristic', locals:  {characteristic: characteristic}

    .projection.features-group
      %h2 Projection
      .room-chars
        -@room.room_characteristics.select{ |c| c.projection_feature?}.each do |characteristic|
          = render partial: 'room_characteristic', locals:  {characteristic: characteristic}

  - if policy(@room).update?
    = render partial: 'alerts/form', locals: {alertable: @room}

    %h3 Add an Image

    = render partial: 'room_image_form', locals: {room: @rooms}

    %h3 Add a Panorama
    = @room.rmrecnbr

    = render partial: 'room_panorama_form', locals: {room: @rooms}